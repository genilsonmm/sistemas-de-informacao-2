package com.deliveryapp.repository;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import com.deliveryapp.model.DiseaseCase;

public class LivroRepository {

	private static LivroRepository instance;
	
	private List<DiseaseCase> livros = new ArrayList<DiseaseCase>();
	
	public static LivroRepository instance() {
		if(instance == null)
			instance = new LivroRepository();
		
		return instance;
	}
	
	public List<DiseaseCase> todos(){
		return livros;
	}
	
	public void add(DiseaseCase livro) {
		livro.setId(proximoId());
		livros.add(livro);
	}
	
	public DiseaseCase editar(int id, DiseaseCase livro) throws Exception {
		
		DiseaseCase livroLocalizado = obterLivro(id);
		
		livroLocalizado.setTitulo(livro.getTitulo());
		livroLocalizado.setEditora(livro.getEditora());
		livroLocalizado.setPaginas(livro.getPaginas());
		
		return livroLocalizado;	
	}
	
	public DiseaseCase obterLivro(int id) throws Exception {
		
		Optional<DiseaseCase> livroLocalizado = livros.stream().filter(l -> l.getId() == id).findFirst();
		
		if(livroLocalizado.isPresent())
			return livroLocalizado.get();
		else
			throw new Exception("Não foi possível localizar o livro");
	}
	
	public int remover(int id) throws Exception {
		livros.remove(obterLivro(id));
		return id;
	}
	
	private int proximoId() {
		return livros.size() + 1;
	}
}
