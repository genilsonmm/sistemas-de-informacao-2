package com.deliveryapp.repository;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.Query;

import com.deliveryapp.model.Customer;

public class CustomerRepository {
	
	private EntityManagerFactory entityManagerFactory; 

	public CustomerRepository() {
		entityManagerFactory = Persistence.createEntityManagerFactory("deliveryDb");	
	}
	
	public void add(Customer customer) {
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		EntityTransaction transaction = entityManager.getTransaction();
		
		try
		{
			transaction.begin();
			
			entityManager.persist(customer);
			
			transaction.commit();
		}
		catch (Exception e) {
			transaction.rollback();
		}
		finally {
			entityManager.close();
		}
	}
	

	public List<Customer> getAll(){
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		Query query = entityManager.createQuery("SELECT c FROM Customer c");
		
	    return (List<Customer>) query.getResultList();
	}
	
	public Customer getById(int id) {
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		return entityManager.find(Customer.class, id);
	}
	
	public void remove(long id) {
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		EntityTransaction transaction = entityManager.getTransaction();
		
		Customer customer = entityManager.find(Customer.class, id);
		try
		{
			transaction.begin();
			
			entityManager.remove(customer);
			
			transaction.commit();
		}
		catch (Exception e) {
			transaction.rollback();
		}
		finally {
			entityManager.close();
		}
	}
}
